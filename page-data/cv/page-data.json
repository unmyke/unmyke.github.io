{"componentChunkName":"component---src-pages-mdx-frontmatter-slug-js","path":"/cv/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"slug\": \"/cv\",\n  \"order\": 2,\n  \"title\": \"CV\",\n  \"description\": \"cv\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Focusing on \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"software engineering\"), \" using a domain-driven approach. Most comfortable with \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Javascript/Typescript\"), \". Building GraphQL/RESTfulAPI/WebSocket and microservices. Making user interfaces.\"), mdx(\"p\", null, \"Growing skills in continuous integration and continuous delivery. I'm passionate about \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"functional programming\"), \" and learning \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Clojure\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Tools:\"), \" Typescript / JavaScript / NestJS / Express / RESTful / GraphQL / WebSocket / PostgreSQL / MySQL / MongoDB / RabbitMQ / gRPC / React / Redux / DDD / TDD / Agile / Docker / Ansible / Git\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"slug":"/cv","title":"CV","description":"cv"}}},"pageContext":{"id":"dd416ef1-1d41-506a-901d-bb11b74debad","frontmatter__slug":"/cv","__params":{"frontmatter__slug":"cv"}}},"staticQueryHashes":["127633260","1982432831"]}